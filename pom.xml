<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ohair.stephen</groupId>
	<artifactId>environmental-analyzer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Environment Analyzer</name>
	<url>https://superevensteven.github.io/environmental-analyzer/</url>
	<description>Uses apache beam to create a distributed pipeline that combine radar and gsod datasets.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<beam.version>2.4.0</beam.version>
		<bigquery.version>v2-rev374-1.22.0</bigquery.version>
		<google-clients.version>1.22.0</google-clients.version>
		<junit.version>4.12</junit.version>
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<slf4j.version>1.7.25</slf4j.version>
		<spark.version>2.2.1</spark.version>
		<pubsub.version>v1-rev10-1.22.0</pubsub.version>
		<hadoop.version>2.7.3</hadoop.version>
		<maven-surefire-plugin.version>2.20.1</maven-surefire-plugin.version>
		<maven-exec-plugin.version>1.6.0</maven-exec-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>
		<google-cloud-storage.version>1.0.1</google-cloud-storage.version>
		<netcdf.version>4.6.11</netcdf.version>
		<cdm.version>4.6.11</cdm.version>
	</properties>
	<dependencies>
		<!-- Adds a dependency on the Beam SDK. -->
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-core</artifactId>
			<version>${beam.version}</version>
		</dependency>

		<!-- Adds a dependency on the Beam Google Cloud Platform IO module. -->
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-io-google-cloud-platform</artifactId>
			<version>${beam.version}</version>
		</dependency>

		<!-- Dependencies below this line are specific dependencies -->
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>${google-clients.version}</version>
			<exclusions>
				<!-- Exclude an old version of guava that is being pulled in by a transitive 
					dependency of google-api-client -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.google.apis</groupId>
			<artifactId>google-api-services-bigquery</artifactId>
			<version>${bigquery.version}</version>
			<exclusions>
				<!-- Exclude an old version of guava that is being pulled in by a transitive 
					dependency of google-api-client -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client</artifactId>
			<version>${google-clients.version}</version>
			<exclusions>
				<!-- Exclude an old version of guava that is being pulled in by a transitive 
					dependency of google-api-client -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.google.apis</groupId>
			<artifactId>google-api-services-pubsub</artifactId>
			<version>${pubsub.version}</version>
			<exclusions>
				<!-- Exclude an old version of guava that is being pulled in by a transitive 
					dependency of google-api-client -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Add slf4j API frontend binding with JUL backend -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
			<!-- When loaded at runtime this will wire up slf4j to the JUL backend -->
			<scope>runtime</scope>
		</dependency>

		<!-- Unit testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>

		<!-- The DirectRunner is needed for unit tests. -->
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-runners-direct-java</artifactId>
			<version>${beam.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Apache beam runner for Google Cloud DataFlow -->
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-runners-google-cloud-dataflow-java</artifactId>
			<version>${beam.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Google Cloud -->
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-storage</artifactId>
			<version>${google-cloud-storage.version}</version>
		</dependency>

		<!-- Netcdf 4 -->
		<dependency>
			<groupId>edu.ucar</groupId>
			<artifactId>cdm</artifactId>
			<version>${cdm.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.ucar</groupId>
			<artifactId>netcdf4</artifactId>
			<version>${netcdf.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<executions>
					<execution>
						<id>attach-descriptor</id>
						<goals>
							<goal>attach-descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Ensure that the Maven jar plugin runs before the Maven shade plugin 
				by listing the plugin higher within the file. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.ohair.stephen.edp.BatchProcessPipeline</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Configures `mvn package` to produce a bundled jar ("fat jar") for 
				runners that require this for job submission to a cluster. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}-bundled-${project.version}</finalName>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/LICENSE</exclude>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${maven-exec-plugin.version}</version>
					<configuration>
						<cleanupDaemonThreads>false</cleanupDaemonThreads>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<reportSets>
					<reportSet>
						<id>uml</id>
						<reports>
							<report>javadoc</report>
						</reports>
						<configuration>
							<name>UML &amp; Java Documentation</name>
							<destDir>uml</destDir>
							<quiet>true</quiet>
							<aggregate>true</aggregate>
							<show>private</show>
							<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
							<docletArtifact>
								<groupId>org.umlgraph</groupId>
								<artifactId>umlgraph</artifactId>
								<version>5.6.6</version>
							</docletArtifact>
							<additionalparam>
								-inferrel -inferdep -quiet -hide java.* -hide
								org.eclipse.* -collpackages
								java.util.* -postfixpackage
								-nodefontsize 9 -nodefontpackagesize 7 -attributes -types
								-visibility
								-operations -constructors
								-enumerations -enumconstants
								-views
							</additionalparam>
							<useStandardDocletOptions>true</useStandardDocletOptions>
						</configuration>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<!-- Don't lookup dependency locations that are no longer valid https://stackoverflow.com/questions/13316606/maven-error-message-artifact-has-no-file -->
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>summary</report>
							<report>dependencies</report>
							<report>project-team</report>
							<report>mailing-list</report>
							<report>cim</report>
							<report>issue-tracking</report>
							<report>license</report>
							<report>scm</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<!-- For Netcdf -->
		<repository>
			<id>unidata-releases</id>
			<name>Unidata Releases</name>
			<url>https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/</url>
		</repository>
	</repositories>

</project>