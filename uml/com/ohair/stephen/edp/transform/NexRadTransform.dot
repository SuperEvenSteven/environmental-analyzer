#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.ohair.stephen.edp.transform.NexRadTransform
	c435 [label=<<table title="com.ohair.stephen.edp.transform.NexRadTransform" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./NexRadTransform.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NexRadTransform </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NexRadTransform() </td></tr>
<tr><td align="left" balign="left"> + expand(elements : PCollection&lt;String&gt;) : PCollection&lt;NexRadDataModel&gt; </td></tr>
<tr><td align="left" balign="left"> ~ formatDateUtc(date : String) : Date </td></tr>
		</table></td></tr>
		</table>>, URL="./NexRadTransform.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//com.ohair.stephen.edp.transform.NexRadTransform extends org.apache.beam.sdk.transforms.PTransform<org.apache.beam.sdk.values.PCollection<java.lang.String>, org.apache.beam.sdk.values.PCollection<com.ohair.stephen.edp.model.NexRadDataModel>>
	c439:p -> c435:p [dir=back,arrowtail=empty];
	// com.ohair.stephen.edp.transform.NexRadTransform DEPEND org.apache.beam.sdk.values.PCollection<T>
	c435:p -> c440:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.ohair.stephen.edp.transform.NexRadTransform DEPEND org.apache.beam.sdk.values.PCollection<T>
	c435:p -> c440:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.apache.beam.sdk.values.PCollection<T>
	c440 [label=<<table title="org.apache.beam.sdk.values.PCollection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/beam/sdk/values/PCollection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PCollection&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - coderOrFailure : PCollection.CoderOrFailure&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> - typeDescriptor : TypeDescriptor&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> - windowingStrategy : WindowingStrategy&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - isBounded : PCollection.IsBounded </td></tr>
<tr><td align="left" balign="left"> - tag : TupleTag&lt;?&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - PCollection(arg0 : Pipeline, arg1 : WindowingStrategy&lt;?, ?&gt;, arg2 : PCollection.IsBounded) </td></tr>
<tr><td align="left" balign="left"> + finishSpecifyingOutput(arg0 : String, arg1 : PInput, arg2 : PTransform&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + finishSpecifying(arg0 : PInput, arg1 : PTransform&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTypeDescriptor() : TypeDescriptor&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> - inferCoderOrFail(arg0 : PInput, arg1 : PTransform&lt;?, ?&gt;, arg2 : CoderRegistry) : PCollection.CoderOrFailure&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + expand() : Map&lt;TupleTag&lt;?&gt;, PValue&gt; </td></tr>
<tr><td align="left" balign="left"> + setName(arg0 : String) : PCollection&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getCoder() : Coder&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + setCoder(arg0 : Coder&lt;T&gt;) : PCollection&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + apply(arg0 : PTransform&lt;?, OutputT&gt;) : OutputT </td></tr>
<tr><td align="left" balign="left"> + apply(arg0 : String, arg1 : PTransform&lt;?, OutputT&gt;) : OutputT </td></tr>
<tr><td align="left" balign="left"> + getWindowingStrategy() : WindowingStrategy&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + isBounded() : PCollection.IsBounded </td></tr>
<tr><td align="left" balign="left"> + setTypeDescriptor(arg0 : TypeDescriptor&lt;T&gt;) : PCollection&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + setWindowingStrategyInternal(arg0 : WindowingStrategy&lt;?, ?&gt;) : PCollection&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + setIsBoundedInternal(arg0 : PCollection.IsBounded) : PCollection&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + createPrimitiveOutputInternal(arg0 : Pipeline, arg1 : WindowingStrategy&lt;?, ?&gt;, arg2 : PCollection.IsBounded, arg3 : Coder&lt;T&gt;) : PCollection&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/beam/sdk/values/PCollection.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// org.apache.beam.sdk.transforms.PTransform<InputT extends org.apache.beam.sdk.values.PInput, OutputT extends org.apache.beam.sdk.values.POutput>
	c439 [label=<<table title="org.apache.beam.sdk.transforms.PTransform" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/beam/sdk/transforms/PTransform.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> PTransform&lt;InputT extends PInput, OutputT extends POutput&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # name : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # PTransform() </td></tr>
<tr><td align="left" balign="left"> # PTransform(arg0 : String) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + expand(arg0 : InputT) : OutputT </font></td></tr>
<tr><td align="left" balign="left"> + validate(arg0 : PipelineOptions) </td></tr>
<tr><td align="left" balign="left"> + getAdditionalInputs() : Map&lt;TupleTag&lt;?&gt;, PValue&gt; </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> # getKindString() : String </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : ObjectInputStream) </td></tr>
<tr><td align="left" balign="left"> # getDefaultOutputCoder() : Coder&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> # getDefaultOutputCoder(arg0 : InputT) : Coder&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getDefaultOutputCoder(arg0 : InputT, arg1 : PCollection&lt;T&gt;) : Coder&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + populateDisplayData(arg0 : DisplayData.Builder) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/beam/sdk/transforms/PTransform.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
}

